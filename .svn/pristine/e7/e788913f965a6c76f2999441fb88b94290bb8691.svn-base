import React, { Component } from 'react'
import { withRouter } from 'react-router'
import {
    Carousel,
    WhiteSpace,
    WingBlank,
    Toast,
    Flex,
    List,
    Button,
    Card,
    Grid,
    Popup,
    Modal
} from 'antd-mobile';
import { Img, CartBar } from 'commonComponent';
import { common } from 'common';
import CouponList from 'commonComponent/CouponList';
import BargainMoreInfo from '../../components/BargainMoreInfo';
// import BargainList from '../../components/BargainList';
import BargainStoreInfo from '../../components/BargainStoreInfo';
// import BargainSpec from '../../components/BargainSpec';
// import EvaluateBargainList from '../../components/EvaluateBargainList';
import { Map } from 'immutable'
import * as goodsDetailApi from '../../../goodsDetail/api/goodsDetail';
import * as cartApi from '../../../goodsDetail/api/cart';
import * as storeApi from '../../../goodsDetail/api/store';

import './bargargainDetail.less';

class GoodsDetail extends Component {
    constructor(props) {
        super(props);
        this.state = {
            goodsDetailInfo: Map(),
            buyCount: 1,
            cartNum: 0,
            isFav: 0,
            modal1: false,
            imgurl:''
        }
    }

    componentDidUpdate(prevProps, prevState) {
        if (prevProps.params.specId != this.props.params.specId) {
            console.log('componentDidUpdate', prevProps.params.specId,
                this.props.params.specId);

            this.refresh();
        }
    }

    refresh = () => {
        Toast.loading();
        // this.setState({
        //   cartNum: common.getCartNum()
        // });

        cartApi.cartList().then(result => {
            if (result.result == 1 && result.data) {
                let cartNum = 0;
                result.data.forEach(function(element) {
                    cartNum += element.goodsNum
                });
                this.setState({
                    cartNum
                });
            }
        })

        // 获取商品详情
        goodsDetailApi.goodsdetail({
            specId: this.props.params.specId
        }).then(result => {
            Toast.hide();
            if (result.result != 1) {
                Toast.error(result.msg);
                return;
            }
            const goodsDetailInfo = Map(result.data[0]);
            // alert(JSON.stringify(goodsDetailInfo));
            this.setState({
                goodsDetailInfo,
                isFav: goodsDetailInfo.isFav
            });

            const node = this.refs.detailScroll;
            node.scrollTop = 0;

            // 登录后才上报 浏览记录
            if (common.isLogin()) {
                setTimeout(function() {
                    goodsDetailApi.goodsBrowseSaveOrUpdate({
                        goodsId: goodsDetailInfo.get('goodsId')
                    });
                }, 100);
            }
        });
    }

    componentDidMount() {
        this.refresh();
    }

    gotoEvaluateList = (goodsDetailInfo) => {
        this.props.router.push(`/evaluteList/${goodsDetailInfo.goodsId}`);
    }

    gotoConsultation = (goodsDetailInfo) => {
        this.props.router.push(`/consultList/${goodsDetailInfo.goodsId}`);
    }

    /**
     * 点击获取优惠券
     */
    getCoupon = () => {
        const goodsDetailInfo = this.state.goodsDetailInfo.toJS();

        storeApi.couponlist({
            storeId: goodsDetailInfo.storeId
        }).then(result => {
            const data = result.data;
            if (data && data.length > 0) {
                Popup.show(<CouponList
                    storeId={goodsDetailInfo.storeId}
                    couponList={data}
                    onClose={() => Popup.hide()} />, { animationType: 'slide-up' });
            } else {
                Toast.info('暂无优惠券可领券', 1)
            }
        })

        /*const onMaskClose = () => {
         console.log('关闭遮罩');
         }
         Popup.show(<CouponList
         storeId={goodsDetailInfo.storeId}
         onClose={() => Popup.hide()} />, { animationType: 'slide-up', onMaskClose });*/
    }

    /**
     * 点击获取规格
     */
    getSpec = (e) => {
        // document.style =
        e.preventDefault();
        e.nativeEvent.stopImmediatePropagation();
        e.stopPropagation();
        const goodsDetailInfo = this.state.goodsDetailInfo.toJS();
        Popup.show(
            <BargainSpec
                addCart={this.addCart}
                gotoBuy={this.gotoBuy}
                buyCount={this.state.buyCount}
                onChangeSpec={this.onChangeSpec}
                onChangeBuyNum={this.onChangeBuyNum}
                goodsDetailInfo={goodsDetailInfo}
                onClose={() => Popup.hide()} />, { animationType: 'slide-up' }
        );
    }

    onChangeBuyNum = (num) => {
        this.setState({
            buyCount: num
        });
    }

    // 收藏
    storecollection = () => {
        common.checkLogin();
        const BargainSpec = this.state.goodsDetailInfo.get('BargainSpec')
        goodsDetailApi.storecollection({
            favType: 1,
            goodsId: BargainSpec.goodsId
        }).then(result => {
            if (result.result == 1) {
                if (result.isfav == 1) {
                    Toast.info('已收藏');
                }
                this.setState({
                    isFav: result.isfav
                });
            } else {
                Toast.fail(result.msg);
            }
        });
    }

    // 去购物车
    gotoCart = () => {
        common.gotoCart();
    }

    // 加入购物车处理
    addCart = (count) => {
        common.checkLogin();
        const BargainSpec = this.state.goodsDetailInfo.get('BargainSpec')
        cartApi.addCart({
            goodsId: BargainSpec.goodsId,
            count: count || 1,
            specId: BargainSpec.goodsSpecId,
            saveType: 0
        }).then(result => {
            if (result.result == 1) {
                const cartCount = result.data[0].cartCount;
                this.setState({
                    cartNum: cartCount
                })
                // 同步购物车数量
                common.setCartNum(cartCount);
                Toast.info('商品已添加到购物车');
            } else {
                Toast.fail(result.msg);
            }
        });
    }

    showModal = (key,item) => (e) => {
        e.preventDefault();
        this.setState({
            [key]: true,
            imgurl:item
        });
    }
    onClose = key => () => {
        this.setState({
            [key]: false,
        });
    }
    Close=()=>{
        this.setState({
            modal1: false,
        });
    }
    render() {
        const goodsDetailInfo = this.state.goodsDetailInfo.toJS();
        if (!goodsDetailInfo || !goodsDetailInfo.goodsCallyList) {
            return null;
        }
        console.log('render', goodsDetailInfo);

        return (
            <div className='wx-goods-detail'>
                <div ref='detailScroll' className='fix-scroll hastitle hasbottom' style={{
                    backgroundColor: 'white',position:'relative'}}>
                    <div style={{height:'7.5rem',overflow:'hidden',position:'relative'}}>
                        <Carousel autoplay={false} infinite={false} dots={true} selectedIndex={1} className="imgBoxdiv">
                            {
                                goodsDetailInfo.goodsCallyList.map((item,index) => (
                                    <Img key={index} src={item} onClick={this.showModal('modal1',item)} />
                                ))
                            }
                        </Carousel>
                        <div className="spanNum_box">
                            <p className="spanNum">已有{goodsDetailInfo.evaluateNum}人参与砍价</p>
                        </div>
                    </div>

                    <Modal title="商品详情"
                           visible={this.state.modal1}
                           transparent
                           maskClosable={true}
                           onClose={this.onClose('modal1')}
                           style={{width:'8rem',height:'10rem'}}
                    >
                        <Img className='imgDe' onClick={()=>this.Close()} src={this.state.imgurl} style={{width:'8rem',height:'8rem'}}/>
                    </Modal>

                    <Flex className='wx-goods-detail-info'  style={{padding:'0.2rem'}}>
                        <Flex.Item style={{flex:2}} className="bargainImgl">
                            <div className="goodsnames">{goodsDetailInfo.goodsName}</div>
                            <div className="goodsIntroduce">{goodsDetailInfo.goodsSubtitle}</div>
                        </Flex.Item>
                        <Flex.Item style={{flex:1,textAlign:'right'}}  >
                            <Button type='primary' size='small' inline onClick={()=>common.gotoGoodsDetail({specId:goodsDetailInfo.specId})}>查看商品详情</Button>
                        </Flex.Item>
                    </Flex>
                    {goodsDetailInfo.goodsShow==0?<div style={{height:'1rem',background:'#ddd',lineHeight:'1rem',textAlign:'center',fontSize:'0.5rem'}}>商品已经下架啦~</div>:<div>
                        <WhiteSpace size="md" style={{background:'#f3f3f3'}}/>
                        <Flex className='wx-goods-detail-info'  style={{padding:'0.2rem'}}>
                            <Flex.Item style={{flex:1}} className="bargainImgl">
                                <Img src="/assets/img/bargain_detail.png" style={{width:'1rem',height:'1rem'}} />
                            </Flex.Item>
                            <Flex.Item style={{flex:2}}  >
                                <p style={{overflow: 'hidden',whiteSpace: 'nowrap',textOverflow: 'ellipsis',color:'#9c9c9c'}}>{goodsDetailInfo.gcName}</p>
                                <p>￥{goodsDetailInfo.goodCostPrice}</p>

                            </Flex.Item>
                            <Flex.Item style={{flex:4,textAlign:'right'}}  >
                                <Button type='primary' size='small' inline >未参加</Button><Button type='primary' size='small' inline style={{marginLeft:'0.1rem',backgroundColor:'#fff',color:'#00a9e0'}}>0人帮砍</Button>
                            </Flex.Item>
                        </Flex>
                        <WhiteSpace size="md" style={{background:'#f3f3f3'}}/>

                        {/*<WhiteSpace></WhiteSpace>*/}
                        <BargainStoreInfo goodsDetailInfo={goodsDetailInfo}></BargainStoreInfo>
                        <WhiteSpace size="md" style={{background:'#f3f3f3'}}/>
                        {/*<WhiteSpace></WhiteSpace>*/}
                        {/*<BargainList goodsDetailInfo={goodsDetailInfo}></BargainList>*/}
                        <BargainMoreInfo goodsDetailInfo={goodsDetailInfo}></BargainMoreInfo>
                    </div>}
                    <Flex className="bargainBtn">
                        <Flex.Item style={{flex:1}}  >
                            <Button type='primary'onClick={()=>common.gotoGroupBargainDetail({specId:goodsDetailInfo.specId})} style={{height:'0.65rem',margin:'0rem 0.2rem',lineHeight:'0.65rem'}}>砍下一刀</Button>
                        </Flex.Item>
                    </Flex>
                </div>


            </div>
        )
    }
}

export default withRouter(GoodsDetail);
